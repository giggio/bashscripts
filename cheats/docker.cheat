% docker

# Remove an image
docker image rm <image_full_name>
$ image_full_name: docker images --format "{{.Repository}}:{{.Tag}}" --- --column 1

# Pull all images
docker images --format "{{.Repository}}:{{.Tag}}" | grep --invert-match \<none\> | xargs -t -L1 docker pull

# Pull all tags of an image
docker image ls --filter "reference=<image_name>:*" -q --format "{{.Repository}}:{{.Tag}}" | xargs -t -L1 docker pull

# Remove all "none" images
docker rmi $(docker images | grep \<none\> | awk '{print $3}')

# Show all "none" images
docker images --format "{{.Repository}}:{{.Tag}}" | grep \<none\>

# Remove all tags of an image
docker rmi $(docker image ls --filter "reference=<image_name>:*" -q --format "{{.Repository}}:{{.Tag}}")
$ image_name: docker images --format "{{.Repository}}" | sort | uniq

; does not work on wsl 2:
# Enter the host (run 'chroot /host' later)
docker run --net=host --ipc=host --uts=host --pid=host -it --security-opt=seccomp=unconfined --privileged --rm -v /:/host alpine /bin/sh
;chroot /host

# Sort images by size
docker images <image_name> | tail -n +2 | sort -k7 -h

# Sort all images by size
docker images | tail -n +2 | sort -k7 -h

# System storage summary
docker system df

# Clear build cache
docker builder prune
